#!/usr/bin/env cuneiform

/* VARIANT-CALL
 *
 * Software dependencies:
 *
 * Annovar
 * Bowtie2 2.2.2
 * Perl 5.14.2
 * Samtools 0.1.19
 * VarScan 2.3.6
 *
 * Memory dependency: 1024 MB
 *
 */

deftask read( <out> : list(File) ) in bash *{
    out=`cat $list`
}*

// bowtie2
deftask bowtie2-align( sam(File) : idx(File) [fastq1(File) fastq2(File)] threads ) in bash *{
    tar xf $idx
    bowtie2 --threads $threads -x bowtie2-index -1 $fastq1 -2 $fastq2 -S $sam --no-unal
}*

// samtools
deftask sam-to-bam( <bam(File)> : sam(File) ) in bash *{
    bam=file.bam
    samtools view -bS $sam > $bam
    if [ "$?" -ne "0" ]
    then
        bam=
    fi
}*

deftask sort-bam( sortedbam(File) : bam(File) memory ) in bash *{
    sortedbam=alignment-sorted.bam
    samtools sort -m $memory $bam alignment-sorted
}*

deftask samtools-mpileup( pileup(File) : sortedbam(File) idx(File) ) in bash *{
    tar xf $idx
    samtools mpileup -f bowtie2-index.fa $sortedbam > $pileup
}*

deftask align-and-pileup( mpileup(File) : [fastq1(File) fastq2(File)] idx(File) threads ) {
    bowtie2-align(
        idx     : idx
        fastq1  : fastq1
        fastq2  : fastq2
        threads : threads
    ) -----------+
                 |
    sam-to-bam(  |
        sam : <--+
    ) -------------+
                   |
    sort-bam(      |
        bam    : <-+
        memory : memory
    ) ---------------------------+
                                 |
    mpileup = samtools-mpileup(  |
        sortedbam : <------------+
        idx : idx
    );
}

// varscan
deftask varscan( vcf(File) : pileup(File) memory ) in bash *{
    java -Xmx$memory net.sf.varscan.VarScan mpileup2snp $pileup --output-vcf --p-value 99e-02 > $vcf
}*

// annovar
deftask annovar-convert( csv(File) : infile(File) format ) in bash *{
    convert2annovar.pl -format $format $infile > $csv
}*

deftask annovar-annotate( fun(File) exonicfun(File) : csv(File) db(File) buildver ) in bash *{
    fun=table.variant_function
    exonicfun=table.exonic_variant_function
    tar xf $db
    annotate_variation.pl -buildver $buildver -geneanno -outfile table $csv db/
}*

threads = '<%= node[:hiway][:variantcall][:threads] %>';

memory = '<%= node[:hiway][:variantcall][:memory] %>';

read1 = read(
    list : 'reads_1.txt'
);

read2 = read(
    list : 'reads_2.txt'
);

index = read(
    list : 'index.txt'
);

pileup = align-and-pileup(
    fastq1  : read1
    fastq2  : read2
    idx     : index
    threads : threads
);

vcf = varscan(
    pileup : pileup
    memory  : memory
);

csv = annovar-convert(
    infile : vcf
    format : 'vcf4'
);

fun exonicfun = annovar-annotate(
    csv      : csv
    db       : 'annovar/db.tar'
    buildver : 'hg19'
);

// TARGET DEFINITION
fun exonicfun;
